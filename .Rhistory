{
ggplot() + gg_lat_lon + get_pine_gg(kill_year) + states_poly_gray_1 +
t1 + coords_square_panel +
guide_colorbar_below_pine_sum + scale_color_pine_1
}
kill_grobs = lapply(kill_years - 1, get_kill_grob)
names(kill_grobs) = as.character(kill_years)
ggplot() + gg_lat_lon + get_pine_gg(kill_year) + states_poly_gray_1 +
t1 + coords_square_panel +
guide_colorbar_below_pine_sum + scale_color_pine_2
# Grobs of kill plots ----
get_kill_grob = function(kill_year)
{
ggplot() + gg_lat_lon + get_pine_gg(kill_year) + states_poly_gray_1 +
t1 + coords_square_panel +
guide_colorbar_below_pine_sum + scale_color_pine_2
}
get_kill_grob(2000)
scale_color_pine_3 = scale_color_gradientn(
colours = rainbow(10)[-10],
na.value = rgb(0, 0, 0, 0),
breaks = log(breaks_pine_2k),
labels = breaks_pine_2k)
# Grobs of kill plots ----
get_kill_grob = function(kill_year)
{
ggplot() + gg_lat_lon + get_pine_gg(kill_year) + states_poly_gray_1 +
t1 + coords_square_panel +
guide_colorbar_below_pine_sum +
scale_color_pine_3
# scale_color_pine_2
}
get_kill_grob(1996)
get_kill_grob_2 = function(kill_year, colors = heat.colors(10)[-10] )
{
ggplot() + gg_lat_lon + get_pine_gg(kill_year) + states_poly_gray_1 +
t1 + coords_square_panel +
guide_colorbar_below_pine_sum +
scale_color_gradientn(
colours = colors,
na.value = rgb(0, 0, 0, 0),
breaks = log(breaks_pine_2k),
labels = breaks_pine_2k)
# scale_color_pine_2
}
return (  geom_point(data = dtt, aes(x, y, color = kill_log), size = sz, alpha = alph, show.legend = legend))
# Retrieve points for specific pine kill years
get_pine_gg = function(kill_year, sz = 0.01, alph = 0.5, legend = F)
{
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((kill_year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "kill"
dtt = dtt[kill > 0, ]
dtt = dtt[kill > 0.5, ]
dtt[kill < 1, ]
dtt[, kill1 := sapply(kill, function(x) max(1, x))]
dtt[, kill1 := sapply(kill, function(x) min(x, 16000))]
dtt[, kill_log := log(kill1)]; #dtt[, summary(kill_log)]
return (  geom_point(data = dtt, aes(x, y, color = kill_log), size = sz, alpha = alph, show.legend = legend))
}
get_kill_grob_2 = function(kill_year, colors = heat.colors(10)[-10], legend = F)
{
ggplot() + gg_lat_lon + get_pine_gg(kill_year, legend = legend) + states_poly_gray_1 +
t1 + coords_square_panel +
guide_colorbar_below_pine_sum +
scale_color_gradientn(
colours = colors,
na.value = rgb(0, 0, 0, 0),
breaks = log(breaks_pine_2k),
labels = breaks_pine_2k)
# scale_color_pine_2
}
get_kill_grob_2(1996, colors = rainbow(10)[-10], legend = T)
get_kill_grob_2(1996, colors = rainbow(10)[-c(1:2)], legend = T)
get_kill_grob_2(1996, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom")
kill_row = cbind(
get_kill_grob_2(plot_year, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year),
get_kill_grob_2(plot_year + 1, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year + 1),
get_kill_grob_2(plot_year + 2, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year + 2),
# ggplotGrob(kill_grobs[[as.character(plot_year)]] + ggtitle(plot_year)),
# ggplotGrob(kill_grobs[[as.character(plot_year + 1)]] + ggtitle(plot_year + 1)),
# ggplotGrob(kill_grobs[[as.character(plot_year + 2)]] + ggtitle(plot_year + 2)),
size = "first"
)
grid.draw(rbind(kill_row, surv_row, size = "first"))
kill_row = cbind(
get_kill_grob_2(plot_year, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year),
get_kill_grob_2(plot_year + 1, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year + 1),
get_kill_grob_2(plot_year + 2, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year + 2),
# ggplotGrob(kill_grobs[[as.character(plot_year)]] + ggtitle(plot_year)),
# ggplotGrob(kill_grobs[[as.character(plot_year + 1)]] + ggtitle(plot_year + 1)),
# ggplotGrob(kill_grobs[[as.character(plot_year + 2)]] + ggtitle(plot_year + 2)),
size = "first"
)
grid.draw(kill_row)
kill_row = cbind(
get_kill_grob_2(plot_year, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year),
get_kill_grob_2(plot_year + 1, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year + 1),
get_kill_grob_2(plot_year + 2, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year + 2),
# ggplotGrob(kill_grobs[[as.character(plot_year)]] + ggtitle(plot_year)),
# ggplotGrob(kill_grobs[[as.character(plot_year + 1)]] + ggtitle(plot_year + 1)),
# ggplotGrob(kill_grobs[[as.character(plot_year + 2)]] + ggtitle(plot_year + 2)),
size = "first"
)
grid.draw(kill_row)
get_kill_grob_2(plot_year, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year)
kill_row = cbind(
ggplotGrob(get_kill_grob_2(plot_year, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year)),
ggplotGrob(get_kill_grob_2(plot_year + 1, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year + 1)),
ggplotGrob(get_kill_grob_2(plot_year + 2, colors = rainbow(10)[-c(1:2)], legend = T) + theme(legend.position = "bottom") + ggtitle(plot_year + 2)),
# ggplotGrob(kill_grobs[[as.character(plot_year)]] + ggtitle(plot_year)),
# ggplotGrob(kill_grobs[[as.character(plot_year + 1)]] + ggtitle(plot_year + 1)),
# ggplotGrob(kill_grobs[[as.character(plot_year + 2)]] + ggtitle(plot_year + 2)),
size = "first"
)
grid.draw(kill_row)
png(width = 1800, height = 1250, file = "figures/kill_surv_rows.png")
grid.draw(rbind(kill_row, surv_row, size = "first"))
dev.off()
surv_grobs_legend = lapply(
which(daymet_years %in% surv_layers),
function(x) gplot(subset(survival_brick, x), maxpixels = maxpixels) +
gg_lat_lon + g_rast_legend + states_poly_gray_1 +
t1 + coords_square_panel + scale_fill_surv)
surv_row = cbind(
ggplotGrob(surv_grobs_legend[[as.character(plot_year)]]),
ggplotGrob(surv_grobs_legend[[as.character(plot_year + 1)]]),
ggplotGrob(surv_grobs_legend[[as.character(plot_year + 2)]]),
size = "first"
)
names(surv_grobs_legend) = as.character(surv_layers)
surv_row = cbind(
ggplotGrob(surv_grobs_legend[[as.character(plot_year)]]),
ggplotGrob(surv_grobs_legend[[as.character(plot_year + 1)]]),
ggplotGrob(surv_grobs_legend[[as.character(plot_year + 2)]]),
size = "first"
)
png(width = 1800, height = 1300, file = "figures/kill_surv_rows.png")
grid.draw(rbind(kill_row, surv_row, size = "first"))
dev.off()
surv_row = cbind(
ggplotGrob(surv_grobs_legend[[as.character(plot_year)]]),
ggplotGrob(surv_grobs_legend[[as.character(plot_year + 1)]]),
ggplotGrob(surv_grobs_legend[[as.character(plot_year + 2)]]),
size = "first"
)
png(width = 1800, height = 1300, file = "figures/kill_surv_rows.png")
grid.draw(rbind(kill_row, surv_row, size = "first"))
grid.draw(surv_row)
surv_row
dev.off()
dev.off()
grid.draw(surv_row)
surv_row = cbind(
ggplotGrob(surv_grobs_legend[[as.character(plot_year)]] + theme(legend.position = "bottom") ),
ggplotGrob(surv_grobs_legend[[as.character(plot_year + 1)]] + theme(legend.position = "bottom") ),
ggplotGrob(surv_grobs_legend[[as.character(plot_year + 2)]] + theme(legend.position = "bottom") ),
size = "first"
)
png(width = 1800, height = 1300, file = "figures/kill_surv_rows.png")
grid.draw(rbind(kill_row, surv_row, size = "first"))
dev.off()
pine_red_stage_year = 2001;
pine_kill_year = pine_red_stage_year - 1
# red-stage in 2000, kill from previous summer.
pine_layer = which(kill_years == pine_red_stage_year)
surv_layer = which(daymet_years == pine_kill_year)
plot(subset(pine_brick, pine_layer))
plot(subset(survival_brick, surv_layer))
pine_2k = subset(pine_brick, pine_layer)
pine_2k[pine_2k[] == 0] = NA
# This already has NA values outside the mask
surv_2k = subset(survival_brick, surv_layer)
gp_surv[[as.character(surv_year)]] + g_rast
gp_surv
surv_year = 2006
which(daymet_years %in% surv_year)
surv_2k = subset(survival_brick, surv_layer)
gplot_surv_2k = gplot(surv_2k, maxpixels = maxpixels)
# I can'f figure out how to overplot one raster on top of another with a different color scale,
# so use a hack of converting the pine to a data frame and plot with a square-shaped point
pine_2k_df = data.table(raster::as.data.frame(pine_2k, xy = T))
names(pine_2k_df)[3] = "kill"
pine_kill_year
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((pine_kill_year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "dat"
dtt = dtt[dat > 0, ]
data.table(as.data.frame((pine_kill_year + 1) %in% names(pine_brick), xy = T))
pine_brick
data.table(as.data.frame(pine_brick, xy = T))
# eliminate the NAs and the zeroes (they cause problems with the log scaling below)
pine_2k_df = pine_2k_df[complete.cases(pine_2k_df),,]
pine_2k_df = pine_2k_df[kill > 1]
# new scale and breaks needed
boxplot(pine_2k_df$kill)
summary(pine_2k_df$kill)
breaks_pine_2k = c(2, 10, 100, 1000, 16000)
gplot_surv_2k = gplot(surv_2k, maxpixels = maxpixels)
ggplot_pine_2k = ggplot(pine_2k_df, aes(x, y, color = kill))
# Legend color bar options:
leg_tit_surv = "% MPB overwinter survival"
leg_tit_pine_2k = "MPB pine mortality"
scale_color_pine = scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_2k, labels = breaks_pine_2k, trans = "log")
scale_color_pine = scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0), trans = "log")
breaks_pine_2k = c(1, 10, 100, 1000, 16000)
log(breaks_pine_2k)
pine_kill_max = 1.6e4
year = 2000
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "kill"
dtt = dtt[kill > 0, ]; dtt[, summary(kill)]
dtt = dtt[kill > 0.5, ]; dtt[, summary(kill)]
dtt[kill < 1, ]
dtt[, kill1 := sapply(kill, function(x) max(1, x))]
dtt[, kill_log := log(kill1)]; dtt[, summary(kill_log)]
ggplot() +
states_poly_gray_1 +
geom_point(data = dtt, aes(x, y, color = kill_log), size = 0.01, alpha = 0.5) +
scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = log(breaks_pine_2k), labels = breaks_pine_2k)
map_scale = 1
gd_1 =  guides(
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = 1,
barwidth = 5))
ggplot() + t1 + coord_equal(xlim = c(-2e6, 0.2e6), ylim = c(-1.2e6, 1e6)) +
guide_colorbar_below_pine_sum + scg_1 +
get_pine_gg(2001) + states_poly_gray_1 + gg_lat_lon
ggplot_pine_surv = function(
# surv_year = 2006,
# pine_kill_year = 2000,
year = 2000,
map_scale, bar_scale = 3,
marg = 25,
legend_bar_base_height = 1.5, legend_bar_base_width = 18,
point_size = 0.01,
point_alpha = 0.5)
{
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "kill"
dtt = dtt[kill > 0, ]
gp_surv[[as.character(year)]] +
# gplot_surv_2k +
g_rast + scale_fill_surv + coord_fixed() +
states_poly_gray_1 +
# geom_point(data = pine_2k_df, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
geom_point(data = dtt, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
scale_color_pine +
scaled_theme(map_scale, marg) +
guides(
fill = guide_colourbar(
title = leg_tit_surv,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"),
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top")) +
ggtitle(year)
}
ggplot_pine_surv(map_scale = 1, year = 2000)
ggplot_pine_surv = function(
# surv_year = 2006,
# pine_kill_year = 2000,
year = 2000,
map_scale, bar_scale = 3,
marg = 25,
legend_bar_base_height = 1.5, legend_bar_base_width = 18,
point_size = 0.01,
point_alpha = 0.5)
{
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "kill"
dtt = dtt[kill > 0, ]
gp_surv[[as.character(year)]] +
# gplot_surv_2k +
g_rast_no_legend + scale_fill_surv + coord_fixed() +
states_poly_gray_1 +
# geom_point(data = pine_2k_df, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
geom_point(data = dtt, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
scale_color_pine +
scaled_theme(map_scale, marg) +
guides(
fill = guide_colourbar(
title = leg_tit_surv,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"),
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top")) +
ggtitle(year)
}
ggplot_pine_surv(map_scale = 1, year = 2000)
ggplot_pine_surv = function(
# surv_year = 2006,
# pine_kill_year = 2000,
year = 2000,
map_scale, bar_scale = 3,
marg = 25,
legend_bar_base_height = 1.5, legend_bar_base_width = 18,
point_size = 0.01,
point_alpha = 0.5)
{
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "kill"
dtt = dtt[kill > 0, ]
surv_grobs[[as.character(year)]] +
# gplot_surv_2k +
g_rast_no_legend + scale_fill_surv + coord_fixed() +
states_poly_gray_1 +
# geom_point(data = pine_2k_df, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
geom_point(data = dtt, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
scale_color_pine +
scaled_theme(map_scale, marg) +
guides(
fill = guide_colourbar(
title = leg_tit_surv,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"),
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top")) +
ggtitle(year)
}
# Year 2000 maps -------------------------------
{
pine_red_stage_year = 2001;
pine_kill_year = pine_red_stage_year - 1
# red-stage in 2000, kill from previous summer.
pine_layer = which(kill_years == pine_red_stage_year)
surv_layer = which(daymet_years == pine_kill_year)
plot(subset(pine_brick, pine_layer))
plot(subset(survival_brick, surv_layer))
pine_2k = subset(pine_brick, pine_layer)
pine_2k[pine_2k[] == 0] = NA
# This already has NA values outside the mask
surv_2k = subset(survival_brick, surv_layer)
gp_surv[[as.character(surv_year)]] + g_rast
gp_surv
surv_year = 2006
which(daymet_years %in% surv_year)
surv_2k = subset(survival_brick, surv_layer)
gplot_surv_2k = gplot(surv_2k, maxpixels = maxpixels)
# I can'f figure out how to overplot one raster on top of another with a different color scale,
# so use a hack of converting the pine to a data frame and plot with a square-shaped point
pine_2k_df = data.table(raster::as.data.frame(pine_2k, xy = T))
names(pine_2k_df)[3] = "kill"
pine_kill_year
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((pine_kill_year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "dat"
dtt = dtt[dat > 0, ]
data.table(as.data.frame((pine_kill_year + 1) %in% names(pine_brick), xy = T))
pine_brick
data.table(as.data.frame(pine_brick, xy = T))
# eliminate the NAs and the zeroes (they cause problems with the log scaling below)
pine_2k_df = pine_2k_df[complete.cases(pine_2k_df),,]
pine_2k_df = pine_2k_df[kill > 1]
# new scale and breaks needed
boxplot(pine_2k_df$kill)
summary(pine_2k_df$kill)
breaks_pine_2k = c(2, 10, 100, 1000, 16000)
gplot_surv_2k = gplot(surv_2k, maxpixels = maxpixels)
ggplot_pine_2k = ggplot(pine_2k_df, aes(x, y, color = kill))
# Legend color bar options:
leg_tit_surv = "% MPB overwinter survival"
leg_tit_pine_2k = "MPB pine mortality"
scale_color_pine = scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_2k, labels = breaks_pine_2k, trans = "log")
scale_color_pine = scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0), trans = "log")
breaks_pine_2k = c(1, 10, 100, 1000, 16000)
log(breaks_pine_2k)
pine_kill_max = 1.6e4
year = 2000
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "kill"
dtt = dtt[kill > 0, ]; dtt[, summary(kill)]
dtt = dtt[kill > 0.5, ]; dtt[, summary(kill)]
dtt[kill < 1, ]
dtt[, kill1 := sapply(kill, function(x) max(1, x))]
dtt[, kill_log := log(kill1)]; dtt[, summary(kill_log)]
ggplot() +
states_poly_gray_1 +
geom_point(data = dtt, aes(x, y, color = kill_log), size = 0.01, alpha = 0.5) +
scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = log(breaks_pine_2k), labels = breaks_pine_2k)
map_scale = 1
gd_1 =  guides(
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = 1,
barwidth = 5))
# ,
# label.position = "top"))
ggplot() + t1 + coord_equal(xlim = c(-2e6, 0.2e6), ylim = c(-1.2e6, 1e6)) +
guide_colorbar_below_pine_sum + scg_1 +
get_pine_gg(2001) + states_poly_gray_1 + gg_lat_lon
ggplot_pine_surv = function(
# surv_year = 2006,
# pine_kill_year = 2000,
year = 2000,
map_scale, bar_scale = 3,
marg = 25,
legend_bar_base_height = 1.5, legend_bar_base_width = 18,
point_size = 0.01,
point_alpha = 0.5)
{
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "kill"
dtt = dtt[kill > 0, ]
surv_grobs[[as.character(year)]] +
# gplot_surv_2k +
g_rast_no_legend + scale_fill_surv + coord_fixed() +
states_poly_gray_1 +
# geom_point(data = pine_2k_df, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
geom_point(data = dtt, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
scale_color_pine +
scaled_theme(map_scale, marg) +
guides(
fill = guide_colourbar(
title = leg_tit_surv,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"),
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top")) +
ggtitle(year)
}
}
ggplot_pine_surv(map_scale = 1, year = 2000)
ggplot_pine_surv = function(
# surv_year = 2006,
# pine_kill_year = 2000,
year = 2000,
map_scale, bar_scale = 3,
marg = 25,
legend_bar_base_height = 1.5, legend_bar_base_width = 18,
point_size = 0.01,
point_alpha = 0.5)
{
dtt = data.table(as.data.frame(subset(pine_brick, which(grepl((year + 1), names(pine_brick)))), xy = T, na.rm = T))
names(dtt)[3] = "kill"
dtt = dtt[kill > 0, ]
surv_grobs[[as.character(year)]] +
# gplot_surv_2k +
g_rast_no_legend + scale_fill_surv + # coord_fixed() +
states_poly_gray_1 +
# geom_point(data = pine_2k_df, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
geom_point(data = dtt, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
scale_color_pine +
scaled_theme(map_scale, marg) +
guides(
fill = guide_colourbar(
title = leg_tit_surv,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"),
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top")) +
ggtitle(year)
}
ggplot_pine_surv(map_scale = 1, year = 2000)
png(height = 700, width = 600, file = "figures/overplot_example.png")
ggplot_pine_surv(map_scale, bar_scale_2k, marg = 40, point_size = 0.005, point_alpha = 0.1)
dev.off()
png(height = 700, width = 600, file = "figures/overplot_example.png")
ggplot_pine_surv(map_scale = 1, year = 2000)
dev.off()
