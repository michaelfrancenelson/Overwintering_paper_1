source("Globals.R")
require(raster)
pine_raster = raster(paste0(spatial_data_output_dir, "pine_kill_western_US_brick.nc"))
# The years for which we have pine kill data from the Databasin data sets
kill_years = 1997:2010
# Proj4string for lon/lat projection
proj4_lon_lat = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# The projection we want to use for maps
proj4_master = "+proj=lcc +lat_1=25 +lat_2=60 +lat_0=42.5 +lon_0=-100 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs +towgs84=0,0,0"
# Location of large spatial data sets
spatial_data_dir = "E:/Data/spatial_data/"
# Where to write derived spatial data
spatial_data_output_dir = "E:/Data/derived_spatial_data/"
# Location of the databasin pine kill data sets
databasin_dir = "E:/Data/Databasin/"
# Location of the R & B model output from the Daymet weather data
daymet_output_dir = "E:/Data/Daymet/daymet_output/"
# Location of the original daymet data files
daymet_dir = "E:/Data/Daymet/"
# local data dir
local_dat_dir = "data/"
# Shapefile layer name for the US National Parks
usfs_layer = "S_USA.NFSLandUnit"
# Shapefile layer name for the US states polygons
states_layer = "tl_2017_us_state"
# Shapefile layer name for Canadian provinces
canada_layer = "lpr_000a16a_e"
# States to include in the US maps
MPB_states = c("WA", "OR", "CA", "ID", "NV", "UT", "AZ", "MT", "WY", "CO", "NM", "SD")
# Location to store figures
figures_dir = "figures/"
pine_raster = raster(paste0(spatial_data_output_dir, "pine_kill_western_US_brick.nc"))
# Average annual survival -------------------------
pine_raster
rm(pine_raster)
pine_brick = raster(paste0(spatial_data_output_dir, "pine_kill_western_US_brick.nc"))
# Average annual survival -------------------------
pine_brick
?calc
calc(pine_brick, mean)
mean_survival = calc(pine_brick, mean)
g1 = gplot(mean_survival)
require(rasterVis)
require(ggplot2)
g1 = gplot(mean_survival)
g1 + geom_raster(aes(fill = value))
mean_survival
# Average annual survival -------------------------
pine_brick
subset(pine_brick, 1)
plot(subset(pine_brick, 1))
survival_brick = raster( paste0(spatial_data_output_dir, "mpb_overwinter_survival_western_US_brick.nc"))
# Average annual survival -------------------------
mean_survival = calc(survival_brick, mean)
survival_brick
# Average annual survival -------------------------
mean_survival = calc(survival_brick, mean)
mean_survival = calc(pine_brick, mean)
pine_brick = raster(paste0(spatial_data_output_dir, "pine_kill_western_US_brick.nc"))
survival_brick = raster(paste0(spatial_data_output_dir, "mpb_overwinter_survival_western_US_brick.nc"))
mean_pine = calc(pine_brick, mean)
mean_pine = raster::calc(pine_brick, mean)
# Average annual survival -------------------------
mean_survival = raster::calc(survival_brick, mean)
gs1 = gplot(mean_survival)
gs1 + geom_raster()
mean_survival
gs1 + geom_raster(aes(fill = value))
gs1 + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0))
t1 = theme(axis.title = element_blank(), axis.text = element_blank())
gs1 + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1
t1 = theme(axis.title = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
gs1 + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1
gs1 + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + theme_minimal()
?theme
t1 = theme(axis.title = element_blank(), axis.text = element_blank(), axis.ticks = element_blank(), panel.background = element_blank())
gs1 + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1
require(rgdal)
readOGR( dsn = paste0(spatial_data_output_dir, "national_forests_in_mpb_states"),
layer = "national_forests_in_mpb_states")
national_forests_poly = readOGR( dsn = paste0(spatial_data_output_dir, "national_forests_in_mpb_states"),
layer = "national_forests_in_mpb_states")
require(ggpolypath)
# Polygons -----------------------
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat, group = group))
ggplot() + g_nf_1
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat))
ggplot() + g_nf_1
# Polygons -----------------------
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat, group = group), fill = NA)
ggplot() + g_nf_1
# Polygons -----------------------
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat, group = group), fill = NULL)
ggplot() + g_nf_1
# Polygons -----------------------
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat, group = group, color = 1))
ggplot() + g_nf_1
dev.off()
# Polygons -----------------------
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat, group = group, color = 1, fill = NULL))
ggplot() + g_nf_1
# Polygons -----------------------
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat, group = group, color = 1, fill = 0))
# Polygons -----------------------
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat, group = group, fill = 0), color = 1)
ggplot() + g_nf_1
# Polygons -----------------------
g_nf_1 = geom_polypath(data = national_forests_poly, aes(long, lat, group = group), color = 1, fill = rgb(0, 0, 0, 0))
ggplot() + g_nf_1
states_poly = readOGR(dsn = paste0(spatial_data_output_dir, "mpb_states"), layer = "mpb_states")
g_st_1 = geom_polygon(data = states_poly, aes(long, lat, group = group), color = 1, fill = rgb(0, 0, 0, 0))
ggplot() + g_st_1
gs1 + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + g_st_1
sd_survival= raster::calc(survival_brick, sd)
rm(gs1)
gs_sd + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + g_st_1
gs_sd = gplot(sd_survival)
gs_sd + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + g_st_1
gs_mean = gplot(mean_survival)
gs_sd + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + g_st_1
sd_survival
sd_survival = raster::calc(survival_brick, sd)
sd_survival
?calc
sd_survival = raster::calc(survival_brick, sd, na.rm = T)
sd_survival = raster::calc(survival_brick, fun = sd, na.rm = T)
survival_brick
?sd
sd_survival = raster::calc(survival_brick, fun = function(x) sd(x, na.rm = T))
sd_survival
survival_brick[, , 1]
survival_brick[1, 1,]
survival_brick[100, 100,]
survival_brick[100, ,]
dim(mean_survival)
# Average annual survival -------------------------
mean_survival = raster::calc(survival_brick, mean, na.rm = T)
# Average annual survival -------------------------
mean_survival = raster::calc(survival_brick, fun = mean, na.rm = T)
subset(survival_brick, 1:2)
subset(survival_brick, 3)
?subset
subset(survival_brick, 1)
subset(survival_brick, 2)
subset(survival_brick, 3)
subset(survival_brick, 4)
plot(survival_brick)
survival_brick
str(survival_brick, 0)
str(survival_brick, 1)
str(survival_brick, 2)
pine_brick = brick(paste0(spatial_data_output_dir, "pine_kill_western_US_brick.nc"))
survival_brick = brick(paste0(spatial_data_output_dir, "mpb_overwinter_survival_western_US_brick.nc"))
# Average annual survival -------------------------
mean_survival = raster::calc(survival_brick, fun = mean, na.rm = T)
sd_survival = raster::calc(survival_brick, fun = sd, na.rm = T)
sd_survival = raster::calc(survival_brick, fun = sd, na.rm = T)
gs_mean = gplot(mean_survival)
gs_sd = gplot(sd_survival)
gs_mean + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + g_st
gs_mean + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + g_st
gs_mean + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + g_st_1
gs_sd + geom_raster(aes(fill = value)) + scale_fill_continuous(na.value = rgb(0, 0, 0, 0)) + t1 + g_st_1
sum_pine = raster::calc(pine_brick, sum)
g_p_sum = gplot(sum_pine)
174 * 5
/60
87 / 60
870 / 60
source("Globals.R")
require(raster)
require(rasterVis)
require(ggplot2)
require(rgdal)
require(ggpolypath)
require(data.table)
winter_min_daymet = fread(paste0(spatial_data_output_dir, "winter_min_daymet_data_table.csv"))
sub1 = winter_min_daymet[sample(1:nrow(winter_min_dt), 2000), , ]
sub1 = winter_min_daymet[sample(1:nrow(winter_min_daymet), 2000), , ]
sub1
g1 = ggplot(sub1, aes(x = x, y = y, color = winter_ending_2015))
g1 + geom_point()
g1 = ggplot(sub1, aes(x = x, y = y, color = winter_ending_2010))
g1 + geom_point()
annual_min_daymer = fread(paste0(spatial_data_output_dir, "annual_min_daymet_data_table.csv"))
sub1 = winter_min_daymet[sample(1:nrow(winter_min_daymet), 2000), , ]
g1 = ggplot(sub1, aes(x = x, y = y, color = winter_ending_2010))
g1 + geom_point()
sub1 == -9999
sub1[sub1 == -9999]
winter_min_daymet = fread(paste0(spatial_data_output_dir, "winter_min_daymet_data_table.csv"))
annual_min_daymer = fread(paste0(spatial_data_output_dir, "annual_min_daymet_data_table.csv"))
winter_min_daymet = fread(paste0(spatial_data_output_dir, "winter_min_daymet_data_table.csv"), na.strings = c("-9999"))
annual_min_daymer = fread(paste0(spatial_data_output_dir, "annual_min_daymet_data_table.csv"), na.strings = c("-9999"))
sub1 = winter_min_daymet[sample(1:nrow(winter_min_daymet), 2000), , ]
g1 = ggplot(sub1, aes(x = x, y = y, color = winter_ending_2010))
g1 + geom_point()
g1 = ggplot(sub1, aes(x = x, y = y, color = winter_ending_2015))
g1 + geom_point()
g1 = ggplot(sub1, aes(x = x, y = y, color = winter_ending_2013))
g1 + geom_point()
g1 = ggplot(sub1, aes(x = x, y = y, color = winter_ending_2015))
g1 + geom_point()
source("Globals.R")
require(raster)
require(rasterVis)
require(ggplot2)
require(rgdal)
require(ggpolypath)
require(data.table)
winter_min_daymet = fread(paste0(spatial_data_output_dir, "winter_min_daymet_data_table.csv"), na.strings = c("-9999"))
annual_min_daymer = fread(paste0(spatial_data_output_dir, "annual_min_daymet_data_table.csv"), na.strings = c("-9999"))
sub1 = winter_min_daymet[sample(1:nrow(winter_min_daymet), 2000), , ]
g1 = ggplot(sub1, aes(x = x, y = y, color = winter_ending_2015))
g1 + geom_point()
?mask
