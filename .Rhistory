winter_tmin = brick(paste0(spatial_data_output_dir, "winter_tmin_brick.nc"), crs = proj4_master)
mean_winter_tmin_kill_years = raster(paste0(local_dat_dir, "mean_winter_tmin_kill_years.nc"), crs = proj4_master)
sd_winter_tmin_kill_years = raster(paste0(local_dat_dir, "sd_winter_tmin_kill_years.nc"), crs = proj4_master)
pine_red_stage_year = 2001; pine_kill_year = pine_red_stage_year - 1
# red-stage in 2000, kill from previous summer.
pine_layer = which(kill_years == pine_red_stage_year)
surv_layer = which(daymet_years == pine_red_stage_year - 1)
plot(subset(pine_brick, pine_layer))
plot(subset(survival_brick, surv_layer))
pine_2k = subset(pine_brick, pine_layer)
pine_2k[pine_2k[] == 0] = NA
# This already has NA values outside the mask
surv_2k = subset(survival_brick, surv_layer)
# I can'f figure out how to overplot one raster on top of another with a different color scale,
# so use a hack of converting the pine to a data frame and plot with a square-shaped point
pine_2k_df = data.table(raster::as.data.frame(pine_2k, xy = T))
names(pine_2k_df)[3] = "kill"
# eliminate the NAs and the zeroes (they cause problems with the log scaling below)
pine_2k_df = pine_2k_df[complete.cases(pine_2k_df),,]
pine_2k_df = pine_2k_df[kill > 1]
# new scale and breaks needed
boxplot(pine_2k_df$kill)
summary(pine_2k_df$kill)
breaks_pine_2k = c(2, 10, 100, 1000, 16000)
gplot_surv_2k = gplot(surv_2k, maxpixels = maxpixels)
ggplot_pine_2k = ggplot(pine_2k_df, aes(x, y, color = kill))
# Colors
scale_color_pine_2k = scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_2k, labels = breaks_pine_2k, trans = "log")
# Colors
scale_color_pine_2k = scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_2k, labels = breaks_pine_2k, trans = "log")
# Plot pine kill sums ---------------
{
min(pine_sum[], na.rm = T)
summary(pine_sum[])
boxplot(pine_sum[]) # Very right skewed, we'll need a log transform
# remove those with values of < 1, since this causes issues with log scaling
pine_gg_sum = pine_sum + 1
# Truncate above a cutoff
p_cutoff = 2e4
sum(pine_gg_sum[] >= p_cutoff, na.rm = T)
sum(pine_gg_sum[] > 0, na.rm = T)
pine_gg_sum[pine_gg_sum >= p_cutoff] = p_cutoff
gplot_pine_sum = gplot(pine_gg_sum, maxpixels = maxpixels)
# Some nice levels for the legend:
max(pine_sum[], na.rm = T)
scale_upper = plyr::round_any(max(pine_gg_sum[], na.rm = T), 1e4)
breaks_pine_sum = plyr::round_any(exp(seq(from = log(10), to = log(scale_upper), len = 4)), 100)
breaks_pine_sum[1] = 10
labels_pine_sum = breaks_pine_sum
labels_pine_sum[length(labels_pine_sum)] = paste0(tail(breaks_pine_sum, 1), "+")
# We won't use this for the submitted figure
tit_pine_sum = ggtitle("Cumulative MPB pine mortality", subtitle = "1980 - 2016")
# Legend title:
leg_tit_pine_sum = paste0("cumulative MPB pine mortality")
guide_colorbar_below_pine_sum = guides(
fill = guide_colourbar(
title = leg_tit_pine_sum,
title.position = "bottom",
title.hjust = 0.5,
label.position = "top",
))
# The state borders should be more prominent than in the other plots
states_poly_pine_sum = geom_polygon(data = states_poly, aes(long, lat, group = group),
color = gray(0, alpha = 0.75), fill = rgb(0, 0, 0, 0))
# Custom red and blue color ramps
ramp_red_pine_sum = colorRampPalette(c(
rgb(1, 0.75, 0.75),
rgb(1, 0.35, 0.35),
rgb(1, 0.05, 0.05),
rgb(1, 0, 0),
rgb(0.35, 0, 0)))
ramp_red_pine_sum_2 = colorRampPalette(c(
# rgb(1, 0.75, 0.75),
# rgb(1, 0.35, 0.35),
# rgb(1, 0.05, 0.05),
rgb(1, 0, 0),
rgb(0.35, 0, 0)))
ramp_yellow_pine_sum = colorRampPalette(c(
rgb(1, 0.3, 0),
rgb(1, 0.15, 0))
)
cols_pine = c(ramp_red_pine_sum(25))
cols_pine_2 = c(ramp_yellow_pine_sum(5), ramp_red_pine_sum_2(12))
scale_color_pine_sum = scale_fill_gradientn(
colours = cols_pine, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_sum, labels = labels_pine_sum, trans = "log")
scale_color_pine_sum_2 = scale_fill_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_sum, labels = labels_pine_sum, trans = "log")
ggplot_pine_sum = function(map_scale, bar_scale = 3, legend_bar_base_height = 1.5, legend_bar_base_width = 18)
{
gplot_pine_sum + coord_fixed() + scaled_theme(map_scale) +
guides(
fill = guide_colourbar(
title = leg_tit_pine_sum,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top")) +
g_rast + states_poly_pine_sum + scale_color_pine_sum_2
}
}
# Colors
scale_color_pine_2k = scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_2k, labels = breaks_pine_2k, trans = "log")
c(rgb(0, 0, 1, 1), rgb(0, 1, 0, 1))
cols_surv = c(rgb(0, 0, 1, 1), rgb(0, 1, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
breaks_surv = seq(0, 1, len = 6)
labels_surv = paste0(100 * breaks_surv, "")
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
# Legend color bar options:
leg_tit_surv = "% MPB overwinter survival"
leg_tit_pine_2k = "MPB pine mortality"
ggplot_pine_surv = function(
map_scale, bar_scale = 3,
marg = 25,
legend_bar_base_height = 1.5, legend_bar_base_width = 18,
point_size = 0.01,
point_alpha = 0.5)
{
gplot_surv_2k + g_rast + scale_fill_surv_2k + coord_fixed() + g_rast +
states_poly_gray_1 +
geom_point(data = pine_2k_df, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
scale_color_pine_2k +
scaled_theme(map_scale, marg) +
guides(
fill = guide_colourbar(
title = leg_tit_surv,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"),
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"))
}
ggplot_pine_surv(1)
cols_surv = c(
rgb(0, 0, 1, 1),
rgb(1, 1, 1, 1),
rgb(0, 1, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv = function(
map_scale, bar_scale = 3,
marg = 25,
legend_bar_base_height = 1.5, legend_bar_base_width = 18,
point_size = 0.01,
point_alpha = 0.5)
{
gplot_surv_2k + g_rast + scale_fill_surv_2k + coord_fixed() + g_rast +
states_poly_gray_1 +
geom_point(data = pine_2k_df, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
scale_color_pine_2k +
scaled_theme(map_scale, marg) +
guides(
fill = guide_colourbar(
title = leg_tit_surv,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"),
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"))
}
ggplot_pine_surv(1)
cols_surv = c(
rgb(0, 0, .5, 1),
rgb(0, 0, .9, 1),
rgb(.9, .9, .9, 1),
rgb(0, 0.9, 0, 1),
rgb(0, 0.7, 0, 1),
rgb(0, 0.5, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv(1)
cols_surv = c(
rgb(0, 0, .5, 1),
rgb(0, 0, .6, 1),
rgb(0, 0, .7, 1),
rgb(0, 0, .8, 1),
rgb(0, 0, .9, 1),
rgb(0.1, 0.1, .9, 1),
rgb(.9, .9, .9, 1),
rgb(0, 0.9, 0, 1),
rgb(0, 0.7, 0, 1),
rgb(0, 0.5, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv(1)
cols_surv = c(
rgb(0, 0, .2, 1),
# rgb(0, 0, .6, 1),
rgb(0, 0, .7, 1),
rgb(0, 0, .8, 1),
rgb(0, 0, .9, 1),
rgb(0.1, 0.1, 1, 1),
rgb(.9, .9, .9, 1),
rgb(0, 0.9, 0, 1),
rgb(0, 0.7, 0, 1),
rgb(0, 0.5, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv(1)
cols_surv = c(
rgb(0, 0, .1, 1),
# rgb(0, 0, .6, 1),
rgb(0, 0, .5, 1),
rgb(0, 0, .8, 1),
rgb(0, 0, .9, 1),
rgb(0.1, 0.1, .9, 1),
rgb(0.2, 0.2, .9, 1),
rgb(0.2, 0.2, 1, 1),
rgb(.9, .9, .9, 1),
rgb(.5, .9, .5, 1),
rgb(0, 0.9, 0, 1),
rgb(0, 0.7, 0, 1),
rgb(0, 0.5, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv(1)
cols_surv = c(
rgb(0, 0, .1, 1),
# rgb(0, 0, .6, 1),
rgb(0, 0, .5, 1),
rgb(0, 0, .8, 1),
rgb(0, 0, .9, 1),
rgb(0.1, 0.1, .9, 1),
rgb(0.2, 0.2, .9, 1),
rgb(0.3, 0.3, .9, 1),
rgb(0.4, 0.4, .9, 1),
rgb(0.5, 0.5, 1, 1),
rgb(.9, .9, .9, 1),
rgb(.5, .9, .5, 1),
rgb(0, 0.9, 0, 1),
rgb(0, 0.7, 0, 1),
rgb(0, 0.5, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv(1)
cols_surv = c(
rgb(0, 0, .1, 1),
# rgb(0, 0, .6, 1),
rgb(0, 0, .5, 1),
rgb(0, 0, .8, 1),
rgb(0, 0, .9, 1),
rgb(0.1, 0.1, .9, 1),
rgb(0.2, 0.2, .9, 1),
rgb(0.3, 0.3, .9, 1),
rgb(0.4, 0.4, .9, 1),
rgb(0.5, 0.5, .9, 1),
rgb(.7, .7, .9, 1),
rgb(.9, .9, .9, 1),
rgb(.7, .9, .7, 1),
rgb(.5, .9, .5, 1),
rgb(.3, .9, .3, 1),
rgb(.2, .9, .2, 1),
rgb(0, 0.9, 0, 1),
rgb(0, 0.7, 0, 1),
rgb(0, 0.5, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv(1)
cols_surv = terrain.colors(10)
plot(1:10, col = terrain.colors(10))
plot(1:10, col = terrain.colors(10), pch = 16)
cols_surv = terrain.colors(10)[-c(5:8)]
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv(1)
cols_surv = terrain.colors(10)[-c(6:8)]
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
cols_surv = terrain.colors(10)[-c(6:8)]
ggplot_pine_surv(1)
cols_surv = terrain.colors(10)[-c(5:7)]
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
ggplot_pine_surv(1)
maxpixels = 1e8
# Plot pine kill sums ---------------
{
min(pine_sum[], na.rm = T)
summary(pine_sum[])
boxplot(pine_sum[]) # Very right skewed, we'll need a log transform
# remove those with values of < 1, since this causes issues with log scaling
pine_gg_sum = pine_sum + 1
# Truncate above a cutoff
p_cutoff = 2e4
sum(pine_gg_sum[] >= p_cutoff, na.rm = T)
sum(pine_gg_sum[] > 0, na.rm = T)
pine_gg_sum[pine_gg_sum >= p_cutoff] = p_cutoff
gplot_pine_sum = gplot(pine_gg_sum, maxpixels = maxpixels)
# Some nice levels for the legend:
max(pine_sum[], na.rm = T)
scale_upper = plyr::round_any(max(pine_gg_sum[], na.rm = T), 1e4)
breaks_pine_sum = plyr::round_any(exp(seq(from = log(10), to = log(scale_upper), len = 4)), 100)
breaks_pine_sum[1] = 10
labels_pine_sum = breaks_pine_sum
labels_pine_sum[length(labels_pine_sum)] = paste0(tail(breaks_pine_sum, 1), "+")
# We won't use this for the submitted figure
tit_pine_sum = ggtitle("Cumulative MPB pine mortality", subtitle = "1980 - 2016")
# Legend title:
leg_tit_pine_sum = paste0("cumulative MPB pine mortality")
guide_colorbar_below_pine_sum = guides(
fill = guide_colourbar(
title = leg_tit_pine_sum,
title.position = "bottom",
title.hjust = 0.5,
label.position = "top",
))
# The state borders should be more prominent than in the other plots
states_poly_pine_sum = geom_polygon(data = states_poly, aes(long, lat, group = group),
color = gray(0, alpha = 0.75), fill = rgb(0, 0, 0, 0))
# Custom red and blue color ramps
ramp_red_pine_sum = colorRampPalette(c(
rgb(1, 0.75, 0.75),
rgb(1, 0.35, 0.35),
rgb(1, 0.05, 0.05),
rgb(1, 0, 0),
rgb(0.35, 0, 0)))
ramp_red_pine_sum_2 = colorRampPalette(c(
# rgb(1, 0.75, 0.75),
# rgb(1, 0.35, 0.35),
# rgb(1, 0.05, 0.05),
rgb(1, 0, 0),
rgb(0.35, 0, 0)))
ramp_yellow_pine_sum = colorRampPalette(c(
rgb(1, 0.3, 0),
rgb(1, 0.15, 0))
)
cols_pine = c(ramp_red_pine_sum(25))
cols_pine_2 = c(ramp_yellow_pine_sum(5), ramp_red_pine_sum_2(12))
scale_color_pine_sum = scale_fill_gradientn(
colours = cols_pine, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_sum, labels = labels_pine_sum, trans = "log")
scale_color_pine_sum_2 = scale_fill_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_sum, labels = labels_pine_sum, trans = "log")
ggplot_pine_sum = function(map_scale, bar_scale = 3, legend_bar_base_height = 1.5, legend_bar_base_width = 18)
{
gplot_pine_sum + coord_fixed() + scaled_theme(map_scale) +
guides(
fill = guide_colourbar(
title = leg_tit_pine_sum,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top")) +
g_rast + states_poly_pine_sum + scale_color_pine_sum_2
}
}
# Year 2000 maps -------------------------------
{
pine_red_stage_year = 2001; pine_kill_year = pine_red_stage_year - 1
# red-stage in 2000, kill from previous summer.
pine_layer = which(kill_years == pine_red_stage_year)
surv_layer = which(daymet_years == pine_red_stage_year - 1)
plot(subset(pine_brick, pine_layer))
plot(subset(survival_brick, surv_layer))
pine_2k = subset(pine_brick, pine_layer)
pine_2k[pine_2k[] == 0] = NA
# This already has NA values outside the mask
surv_2k = subset(survival_brick, surv_layer)
# I can'f figure out how to overplot one raster on top of another with a different color scale,
# so use a hack of converting the pine to a data frame and plot with a square-shaped point
pine_2k_df = data.table(raster::as.data.frame(pine_2k, xy = T))
names(pine_2k_df)[3] = "kill"
# eliminate the NAs and the zeroes (they cause problems with the log scaling below)
pine_2k_df = pine_2k_df[complete.cases(pine_2k_df),,]
pine_2k_df = pine_2k_df[kill > 1]
# new scale and breaks needed
boxplot(pine_2k_df$kill)
summary(pine_2k_df$kill)
breaks_pine_2k = c(2, 10, 100, 1000, 16000)
gplot_surv_2k = gplot(surv_2k, maxpixels = maxpixels)
ggplot_pine_2k = ggplot(pine_2k_df, aes(x, y, color = kill))
# Colors
scale_color_pine_2k = scale_color_gradientn(
colours = cols_pine_2, na.value = rgb(0, 0, 0, 0),
breaks = breaks_pine_2k, labels = breaks_pine_2k, trans = "log")
breaks_surv = seq(0, 1, len = 6)
labels_surv = paste0(100 * breaks_surv, "")
cols_surv = terrain.colors(10)[-c(5:7)]
# cols_surv = topo.colors(10)
#
# plot(1:10, col = terrain.colors(10), pch = 16)
#
# cols_surv = c(
#   rgb(0, 0, .1, 1),
#   # rgb(0, 0, .6, 1),
#   rgb(0, 0, .5, 1),
#   rgb(0, 0, .8, 1),
#   rgb(0, 0, .9, 1),
#   rgb(0.1, 0.1, .9, 1),
#   rgb(0.2, 0.2, .9, 1),
#   rgb(0.3, 0.3, .9, 1),
#   rgb(0.4, 0.4, .9, 1),
#   rgb(0.5, 0.5, .9, 1),
#   rgb(.7, .7, .9, 1),
#   rgb(.9, .9, .9, 1),
#   rgb(.7, .9, .7, 1),
#   rgb(.5, .9, .5, 1),
#   rgb(.3, .9, .3, 1),
#   rgb(.2, .9, .2, 1),
#   rgb(0, 0.9, 0, 1),
#   rgb(0, 0.7, 0, 1),
#   rgb(0, 0.5, 0, 1))
scale_fill_surv_2k = scale_fill_gradientn(
colours = cols_surv,
na.value = rgb(0, 0, 0, 0),
breaks = breaks_surv,
labels = labels_surv)
# Legend color bar options:
leg_tit_surv = "% MPB overwinter survival"
leg_tit_pine_2k = "MPB pine mortality"
ggplot_pine_surv = function(
map_scale, bar_scale = 3,
marg = 25,
legend_bar_base_height = 1.5, legend_bar_base_width = 18,
point_size = 0.01,
point_alpha = 0.5)
{
gplot_surv_2k + g_rast + scale_fill_surv_2k + coord_fixed() + g_rast +
states_poly_gray_1 +
geom_point(data = pine_2k_df, aes(x, y, color = kill), size = point_size, alpha = point_alpha) +
scale_color_pine_2k +
scaled_theme(map_scale, marg) +
guides(
fill = guide_colourbar(
title = leg_tit_surv,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"),
color = guide_colourbar(
title = leg_tit_pine_2k,
title.position = "bottom",
title.hjust = 0.5,
barheight = map_scale * legend_bar_base_height / bar_scale,
barwidth = map_scale * legend_bar_base_width / bar_scale,
label.position = "top"))
}
}
map_scale = 3
bar_scale = 1
bar_scale_2k = 2.2
png("figures/kill_survival_2000.png", width = map_scale * width_png, height = map_scale * height_png)
grob_2k
dev.off()
grob_2k = ggplot_pine_surv(map_scale, bar_scale_2k, marg = 15 * map_scale,  point_size = 0.005, point_alpha = 0.1)
png("figures/kill_survival_2000.png", width = map_scale * width_png, height = map_scale * height_png)
grob_2k
dev.off()
